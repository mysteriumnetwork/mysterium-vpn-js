// @flow
/**
 * Flowtype definitions for provider-service
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.5.7
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

import { TequilapiClient } from "mysterium-tequilapi/lib/client";
import { ServiceInfoDTO } from "mysterium-tequilapi/lib/dto/service-info";
import { ServiceStatus } from "../models/service-status";
declare export class ProviderService {
  constructor(tequilapiClient: TequilapiClient): this;
  checkForExistingService(): Promise<void>;
  isActive(): Promise<boolean>;
  findRunningService(): Promise<ServiceInfoDTO | void>;
  start(providerId: string, serviceType: string): Promise<void>;
  stop(): Promise<void>;
  addStatusSubscriber(subscriber: (newStatus: ServiceStatus) => any): void;
  removeStatusSubscriber(subscriber: (newStatus: ServiceStatus) => any): void;
}
